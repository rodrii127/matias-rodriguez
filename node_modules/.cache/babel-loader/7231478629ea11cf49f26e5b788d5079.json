{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Rodrigo\\\\Desktop\\\\React\\\\matias-rodriguez\\\\src\\\\components\\\\login\\\\LoginScreen.js\",\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useForm } from '../../hooks/useForm';\nimport { AuthContext } from '../../auth/AuthContext';\nimport { types } from '../../types/types';\nimport Swal from 'sweetalert2';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LoginScreen = ({\n  history\n}) => {\n  _s();\n\n  const {\n    dispatch\n  } = useContext(AuthContext);\n  const [formValues, handleImputChange] = useForm({\n    userName: 'matiasrodriguez',\n    password: 'probando1234'\n  });\n  const {\n    userName,\n    password\n  } = formValues;\n\n  const handleLogin = e => {\n    e.preventDefault();\n\n    if (startLoginEmailPassword(userName, password)) {\n      dispatch({\n        type: types.login,\n        payload: {\n          name: 'Matias',\n          username: userName,\n          password: password\n        }\n      });\n      Swal.fire('Bienvenido!', 'Estás como modo administrador.', 'success');\n      history.replace('/management/blog-create');\n    } else {\n      Swal.fire({\n        title: 'Error!',\n        text: 'Do you want to continue',\n        icon: 'error',\n        confirmButtonText: 'Cool'\n      });\n    }\n  };\n\n  const startLoginEmailPassword = (username, password) => {\n    if (username === 'matiasrodriguez' && password === 'probando1234') {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"animate__animated animate__fadeIn animate__faster\\t500ms\",\n    children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n      className: \"auth__title\",\n      children: \"Login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleLogin,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Username\",\n        name: \"userName\",\n        className: \"auth__input\",\n        autoComplete: \"off\",\n        value: userName,\n        onChange: handleImputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        placeholder: \"Password\",\n        name: \"password\",\n        className: \"auth__input\",\n        value: password,\n        onChange: handleImputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        className: \"btn btn-primary btn-block\",\n        children: \" Login \"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n\n_s(LoginScreen, \"yUGTLHKiMLfxpme9I/HRboAChgc=\", false, function () {\n  return [useForm];\n});\n\n_c = LoginScreen;\n\nvar _c;\n\n$RefreshReg$(_c, \"LoginScreen\");","map":{"version":3,"sources":["C:/Users/Rodrigo/Desktop/React/matias-rodriguez/src/components/login/LoginScreen.js"],"names":["React","useContext","useForm","AuthContext","types","Swal","LoginScreen","history","dispatch","formValues","handleImputChange","userName","password","handleLogin","e","preventDefault","startLoginEmailPassword","type","login","payload","name","username","fire","replace","title","text","icon","confirmButtonText"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,qBAAxB;AACA,SAASC,WAAT,QAA4B,wBAA5B;AACA,SAASC,KAAT,QAAsB,mBAAtB;AACA,OAAOC,IAAP,MAAiB,aAAjB;;AAEA,OAAO,MAAMC,WAAW,GAAG,CAAE;AAACC,EAAAA;AAAD,CAAF,KAAiB;AAAA;;AAExC,QAAM;AAAEC,IAAAA;AAAF,MAAeP,UAAU,CAAEE,WAAF,CAA/B;AAEA,QAAM,CAAEM,UAAF,EAAcC,iBAAd,IAAoCR,OAAO,CAAC;AAC9CS,IAAAA,QAAQ,EAAE,iBADoC;AAE9CC,IAAAA,QAAQ,EAAE;AAFoC,GAAD,CAAjD;AAKA,QAAM;AAAED,IAAAA,QAAF;AAAYC,IAAAA;AAAZ,MAAyBH,UAA/B;;AAEA,QAAMI,WAAW,GAAIC,CAAD,IAAM;AACtBA,IAAAA,CAAC,CAACC,cAAF;;AACA,QAAKC,uBAAuB,CAACL,QAAD,EAAWC,QAAX,CAA5B,EAAmD;AAC/CJ,MAAAA,QAAQ,CAAE;AACNS,QAAAA,IAAI,EAAEb,KAAK,CAACc,KADN;AAENC,QAAAA,OAAO,EAAC;AACJC,UAAAA,IAAI,EAAE,QADF;AAEJC,UAAAA,QAAQ,EAAEV,QAFN;AAGJC,UAAAA,QAAQ,EAAEA;AAHN;AAFF,OAAF,CAAR;AAQAP,MAAAA,IAAI,CAACiB,IAAL,CACI,aADJ,EAEI,gCAFJ,EAGI,SAHJ;AAKAf,MAAAA,OAAO,CAACgB,OAAR,CAAgB,yBAAhB;AACH,KAfD,MAeM;AACFlB,MAAAA,IAAI,CAACiB,IAAL,CAAU;AACNE,QAAAA,KAAK,EAAE,QADD;AAENC,QAAAA,IAAI,EAAE,yBAFA;AAGNC,QAAAA,IAAI,EAAE,OAHA;AAINC,QAAAA,iBAAiB,EAAE;AAJb,OAAV;AAMH;AACJ,GAzBD;;AA2BA,QAAMX,uBAAuB,GAAG,CAACK,QAAD,EAAWT,QAAX,KAAwB;AACpD,QAAKS,QAAQ,KAAK,iBAAb,IAAkCT,QAAQ,KAAK,cAApD,EAAqE;AACjE,aAAO,IAAP;AACH;;AACD,WAAO,KAAP;AACH,GALD;;AAQA,sBACI;AAAK,IAAA,SAAS,EAAG,0DAAjB;AAAA,4BACI;AAAI,MAAA,SAAS,EAAC,aAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAGI;AAAM,MAAA,QAAQ,EAAGC,WAAjB;AAAA,8BACI;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,UAA/B;AAA0C,QAAA,IAAI,EAAC,UAA/C;AAA0D,QAAA,SAAS,EAAC,aAApE;AAAkF,QAAA,YAAY,EAAC,KAA/F;AAAqG,QAAA,KAAK,EAAIF,QAA9G;AAAwH,QAAA,QAAQ,EAAED;AAAlI;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAO,QAAA,IAAI,EAAC,UAAZ;AAAuB,QAAA,WAAW,EAAC,UAAnC;AAA8C,QAAA,IAAI,EAAC,UAAnD;AAA8D,QAAA,SAAS,EAAC,aAAxE;AAAsF,QAAA,KAAK,EAAIE,QAA/F;AAAyG,QAAA,QAAQ,EAAEF;AAAnH;AAAA;AAAA;AAAA;AAAA,cAFJ,eAGI;AAAQ,QAAA,IAAI,EAAC,QAAb;AAAsB,QAAA,SAAS,EAAC,2BAAhC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAzDM;;GAAMJ,W;UAIiCJ,O;;;KAJjCI,W","sourcesContent":["import React, { useContext } from 'react';\r\nimport { useForm } from '../../hooks/useForm';\r\nimport { AuthContext } from '../../auth/AuthContext';\r\nimport { types } from '../../types/types';\r\nimport Swal from 'sweetalert2';\r\n\r\nexport const LoginScreen = ( {history} ) => {\r\n    \r\n    const { dispatch } = useContext( AuthContext );\r\n\r\n    const [ formValues, handleImputChange ] = useForm({\r\n        userName: 'matiasrodriguez',\r\n        password: 'probando1234'\r\n    });\r\n    \r\n    const { userName, password } = formValues;\r\n    \r\n    const handleLogin = (e) =>{\r\n        e.preventDefault();\r\n        if ( startLoginEmailPassword(userName, password) ) {\r\n            dispatch( {\r\n                type: types.login,\r\n                payload:{\r\n                    name: 'Matias',\r\n                    username: userName,\r\n                    password: password\r\n                }\r\n            } );\r\n            Swal.fire(\r\n                'Bienvenido!',\r\n                'Estás como modo administrador.',\r\n                'success'\r\n            );\r\n            history.replace('/management/blog-create');\r\n        } else{\r\n            Swal.fire({\r\n                title: 'Error!',\r\n                text: 'Do you want to continue',\r\n                icon: 'error',\r\n                confirmButtonText: 'Cool'\r\n              })\r\n        }\r\n    }\r\n    \r\n    const startLoginEmailPassword = (username, password) => {\r\n        if ( username === 'matiasrodriguez' && password === 'probando1234' ) {\r\n            return true;    \r\n        }\r\n        return false;\r\n    }\r\n\r\n\r\n    return (\r\n        <div className = 'animate__animated animate__fadeIn animate__faster\t500ms'> \r\n            <h3 className='auth__title'>Login</h3>\r\n \r\n            <form onSubmit={ handleLogin }>\r\n                <input type='text' placeholder='Username' name='userName' className='auth__input' autoComplete='off' value = {userName} onChange={handleImputChange} />\r\n                <input type='password' placeholder='Password' name='password' className='auth__input' value = {password} onChange={handleImputChange} />\r\n                <button type='submit' className='btn btn-primary btn-block'> Login </button>\r\n           </form>\r\n        </div>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}